---
import ContentLayout from '../../layouts/ContentLayout.astro';
import ProjectCard from '../../components/ProjectCard.astro';
import Breadcrumb from '../../components/Breadcrumb.astro';
import { getAllPublishedProjects, getProjectsByCategory, projectCategories } from '../../data/projects.ts';
import '../../styles/global.css';

// Get all published projects
const allProjects = getAllPublishedProjects();

// Get projects by categories for filtering
const categories = projectCategories;

// Breadcrumb items
const breadcrumbItems = [
  { label: 'Home', href: '/' },
  { label: 'Projects' }
];
---

<ContentLayout title="Projects - Juan JosÃ© Blanco">
  <Breadcrumb items={breadcrumbItems} />
  <div class="min-h-screen pt-20 pb-16">
    <div class="max-w-6xl mx-auto px-4">

      <!-- Header -->
      <div class="text-center mb-16">
        <h1 class="text-4xl md:text-6xl font-bold text-dark-navy mb-6">
          Projects
        </h1>
        <p class="text-xl text-gray-600 max-w-3xl mx-auto">
          A showcase of my work in web development, AI integration, and digital solutions.
          Each project represents a unique challenge solved with modern technologies.
        </p>
      </div>

      <!-- Category Filters -->
      <div class="flex flex-wrap justify-center gap-4 mb-12">
        {categories.map((category, index) => (
          <button
            class={`filter-btn px-6 py-2 rounded-full font-medium transition-all duration-300 ${
              index === 0
                ? 'bg-dark-teal text-white'
                : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
            }`}
            data-category={category.id}
          >
            {category.label}
          </button>
        ))}
      </div>

      <!-- Projects Grid -->
      {allProjects.length > 0 ? (
        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8" id="projects-grid">
          {allProjects.map(project => (
            <div class={`project-card ${project.category}`}>
              <ProjectCard {...project} />
            </div>
          ))}
        </div>
      ) : (
        <!-- No Projects Message -->
        <div class="text-center py-16">
          <div class="max-w-md mx-auto">
            <svg class="w-16 h-16 text-gray-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
            </svg>
            <h3 class="text-xl font-semibold text-gray-700 mb-4">No projects available</h3>
            <p class="text-gray-500 mb-6">I'm currently working on exciting new projects. Check back soon!</p>
            <a
              href="/#contact"
              class="inline-flex items-center gap-2 text-dark-teal hover:text-medium-teal font-medium transition-colors duration-300"
            >
              Get in touch for collaborations
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
              </svg>
            </a>
          </div>
        </div>
      )}

    </div>
  </div>
</ContentLayout>

<script>
  // Project category filtering
  function initProjectFilters() {
    const filterButtons = document.querySelectorAll('.filter-btn');
    const projectCards = document.querySelectorAll('.project-card');

    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        const category = button.getAttribute('data-category');

        // Update button states
        filterButtons.forEach(btn => {
          if (btn === button) {
            btn.className = 'filter-btn px-6 py-2 rounded-full font-medium transition-all duration-300 bg-dark-teal text-white';
          } else {
            btn.className = 'filter-btn px-6 py-2 rounded-full font-medium transition-all duration-300 bg-gray-100 text-gray-700 hover:bg-gray-200';
          }
        });

        // Filter projects
        projectCards.forEach(card => {
          if (category === 'all' || card.classList.contains(category)) {
            card.style.display = 'block';
          } else {
            card.style.display = 'none';
          }
        });
      });
    });
  }

  // Initialize when DOM is loaded
  document.addEventListener('DOMContentLoaded', initProjectFilters);
</script>